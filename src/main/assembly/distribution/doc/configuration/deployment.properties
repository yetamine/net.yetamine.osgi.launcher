# Deployment properties
#
# The deployment properties file is stored in the bundle source directory which
# the properties file applies to. If the file is named 'deployment.properties',
# the launcher loads it automatically when the bundle source directory path is
# specified instead of the properties file path.
#
# Let's use {bundle-path} in the following explanations for a bundle file path
# which is relative to the bundle source root. A {bundle-path} must use '/' as
# the path component separator and it must be normalized.
#
# Deployment properties may contain following entries:
#
# bundle.location
#   Each bundle to be handled binds a bundle location. By default, the location
#   combines the bundle source root and {bundle-path} of the particular file.
#   This property allows overriding the {bundle-path} with a custom value, so
#   that the file binds a different location; this property has therefore the
#   form 'bundle.location@{bundle-path}' only. An empty value sets the default
#   location.
#
#   This property defines a bundle and its location explicitly, so it can be
#   used to define bundles for files that 'deployment.search' would not find
#   and configure otherwise. Another use case could be patching an inherited
#   deployment when existing bundles could be linked to different files.
#
# bundle.location.root
#   Overrides the location root for the bundle locations. Relative locations,
#   determined for the bundles, are appended to the location root. If the root
#   location does not end with ':' or '/', it must be a URI and it is adjusted
#   to end with '/'. The default location root is the URI of the bundle source.
#
# Deployment properties include following launching properties:
#
#   deployment.action
#   deployment.search
#   start.level
#
# Both 'deployment.action' and 'start.level' can be yet overridden for specific
# bundles using the {prefix}@{bundle-specifier} form where {bundle-specifier}
# must be a restricted glob expression (unlike the full glob expression, the
# restricted expression allows only '?', '*' and '**' wildcards).
#
# A {bundle-path} is matched against the complete {bundle-specifier} set. The
# best matching {bundle-specifier} selects the property to apply on the bound
# bundle. The quality of a match depends on the count of literal characters in
# both the {bundle-path} and the {bundle-specifier} that match. The best match
# that is possible is equality. If more than one {bundle-specifier} match the
# {bundle-path}, none applies and a warning is reported.

bundle.location.root=location://net.yetamine/servicebox/sys/core

deployment.action=install, uninstall
deployment.search=*.jar

start.level=10

# Override start level of provided bundles
start.level@javax.*.jar=1
start.level@org.osgi.util.*.jar=1
